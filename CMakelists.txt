include(ycmake/linkcommon.cmake)
include(ycmake/software.cmake)

cmake_minimum_required(VERSION 3.14)

 

 include_directories (
 
 
   "src/"
   "$ENV{clib}/netcorp/include"
   "$ENV{clib}/guimaster"
 

 )


set(projname "guimaster")
project(${projname} CXX)
message("Build type: ${CMAKE_BUILD_TYPE}")
#
  set(BUILD_DLL 1)  
  set(BUILD_LIB 0)  
  set(console 0)  
#
#
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-writable-strings -O0 -Wdangling-else	-std=c++20 -dD -m64 ")
set(CMAKE_CXX_FLAGS_RELEASE "-O2 -DNDEBUG -D_DLL -D_MT -Xclang --dependent-lib=msvcrt 	-std=c++20 -std=gnu++17")



   set(CMAKE_GENERATE_PDB_FILE ON)
   set(PDB_OUTPUT_DIRECTORY "DEBUG")

   set(CMAKE_GENERATE_PDB_FILE on)
   SET(CMAKE_COLOR_MAKEFILE ON)
   SET(CMAKE_VERBOSE_MAKEFILE ON)
 
 
   message("${CMAKE_BUILD_TYPE}")

   message("build mode : ${MODE}")
 
 
  
 
   set(netcorp "$ENV{clib}/netcorp/build/${CMAKE_BUILD_TYPE}/NetCorp.lib")

   add_subdirectory(include)
 

  sw_objs_bundle( bundle "test/*.cpp" "src/cpp/*.cpp"   "src/imgui/*.cpp" )
  build_target(${projname} SOURCES ${bundle}  )



 
 
  target_precompile_headers(${projname} PRIVATE compile_defs.h)
  target_compile_features(${projname} PRIVATE cxx_std_17)
  link_common_libraries(${projname})






#########################










 